// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
  // previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  token        String  @unique
  name         String?
  modelAliases Json? // JSON object mapping user-defined aliases to model names (e.g., {"my-alias": "provider/model1,provider/model2"})

  keys         ApiKey[]
  accessTokens AccessToken[]
}

model AccessToken {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  type      TokenType
  userId    Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  name      String?
  createdAt DateTime  @default(now())
}

model ApiKey {
  id           Int      @id @default(autoincrement())
  provider     Provider @relation(fields: [providerName], references: [name])
  providerName ProviderName
  owner        User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId      Int
  keyData      Json
  throttleData Json
  notes        String?
  permanentlyFailed Boolean @default(false)
  paused       Boolean  @default(false)
}

enum ThrottleMode {
  BY_MODEL
  BY_KEY
}

enum TokenType {
  API
}

enum ProviderName {
	GEMINI_CODE_ASSIST
	CODE_BUDDY
	GOOGLE_AI_STUDIO
}

model Provider {
  name                ProviderName @id
  throttleMode        ThrottleMode @default(BY_KEY)
  minThrottleDuration Int          @default(1)
  maxThrottleDuration Int          @default(15)
  models              Json // array of model names

  keys ApiKey[]
}
